
name: CI Pipeline for Flask-React App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Клонировать репозиторий
        uses: actions/checkout@v4

      - name: Собрать Docker-образы
        run: |
          docker build -f Dockerfile.backend -t back:1.0 .
          docker build -f Dockerfile.frontend -t front:1.0 .

      - name: Проверить запуск контейнеров
        run: |
          docker run -d -p 5000:5000 --name backend back:1.0
          docker run -d -p 3000:3000 --name frontend front:1.0
          sleep 5
          curl -f http://localhost:5000/profile || exit 1
          curl -f http://localhost:3000 || exit 1
          docker stop backend frontend
          docker rm backend frontend

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Клонировать репозиторий
        uses: actions/checkout@v4

      - name: Установить Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Установить Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'

      - name: Установить Dockle
        run: |
          VERSION="0.4.14"
          curl -L -o dockle.deb "https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.deb"
          sudo dpkg -i dockle.deb
          rm dockle.deb

      - name: Проверить образы с Dockle
        run: |
          docker pull back:1.0 || true
          docker pull front:1.0 || true
          dockle back:1.0 || true
          dockle front:1.0 || true
        continue-on-error: true

      - name: Юнит-тесты (var tests)
        run: |
          cd backend
          pip install -r requirements.txt
          python -m pytest ../test/unit/backend || true
          cd ..
          npm ci
          npm test -- --watchAll=false || true

      - name: Тесты стиля (style tests)
        run: |
          cd backend
          pip install flake8
          flake8 backend/ --config ../test/style/backend/flake8.ini || true
          cd ..
          npm ci
          npm run lint || true
